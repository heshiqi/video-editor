apply plugin: 'com.android.library'

def platformVersion = 21

android {
    compileSdkVersion 27
    buildToolsVersion "29.0.0"

    defaultConfig {
        minSdkVersion "${platformVersion}"
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11", "-D__STDC_CONSTANT_MACROS"
                cppFlags "-fexceptions"
                cppFlags "-frtti"
                arguments "-DANDROID_PLATFORM_LEVEL=${platformVersion}",
                        '-DANDROID_TOOLCHAIN=clang'
            }
            ndk {
                abiFilters "armeabi"
            }
        }


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
}
